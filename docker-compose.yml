version: '3.9'

services:
  # Start zookeeper
  zookeeper:
    image: apachepulsar/pulsar:latest
    container_name: zookeeper
    restart: on-failure
    networks:
      - pulsar
    volumes:
      - ./zoo/data:/var/lib/zookeeper/data
      - ./zoo/log:/var/lib/zookeeper/log
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && \
             bin/generate-zookeeper-config.sh conf/zookeeper.conf && \
             exec bin/pulsar zookeeper"
    healthcheck:
      test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
      interval: 10s
      timeout: 5s
      retries: 30

# Init cluster metadata
  pulsar-init:
    container_name: pulsar-init
    hostname: pulsar-init
    image: apachepulsar/pulsar:latest
    networks:
      - pulsar
    command: >
      bin/pulsar initialize-cluster-metadata \
               --cluster cluster-a \
               --zookeeper zookeeper:2181 \
               --configuration-store zookeeper:2181 \
               --web-service-url http://broker:8080 \
               --broker-service-url pulsar://broker:6650
    depends_on:
      zookeeper:
        condition: service_healthy

# Start bookie
  bookie:
    image: apachepulsar/pulsar:latest
    container_name: bookie
    restart: on-failure
    networks:
      - pulsar
    environment:
      - clusterName=cluster-a
      - zkServers=zookeeper:2181
      - metadataServiceUri=metadata-store:zk:zookeeper:2181
    depends_on:
      zookeeper:
        condition: service_healthy
      pulsar-init:
        condition: service_completed_successfully
  # Map the local directory to the container to avoid bookie startup failure due to insufficient container disks.
    volumes:
      - ./book/data:/var/lib/bookkeeper/data
      - ./book/log:/var/lib/bookkeeper/log
    command: bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf
      && exec bin/pulsar bookie"

# Start broker
  broker:
    image: apachepulsar/pulsar:latest
    container_name: broker
    hostname: broker
    restart: on-failure
    networks:
      - pulsar
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - zookeeperServers=zookeeper:2181
      - clusterName=cluster-a
      - managedLedgerDefaultEnsembleSize=1
      - managedLedgerDefaultWriteQuorum=1
      - managedLedgerDefaultAckQuorum=1
      - advertisedAddress=broker
      - advertisedListeners=external:pulsar://broker:6650
    depends_on:
      zookeeper:
        condition: service_healthy
      bookie:
        condition: service_started
    ports:
      - "6650:6650"
      - "8080:8080"
    command: bash -c "bin/apply-config-from-env.py conf/broker.conf
      &&  exec bin/pulsar broker"

  app:
    build: 
      dockerfile: ./app.Dockerfile
    volumes:
            - .:/usr/app
    ports:
      - 6150:80
    networks:
      - pulsar
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: 400M
    depends_on:
      broker:
        condition: service_started
    environment:
      - PULSAR_ADDRESS=broker

  app-auditoria:
    build: 
      dockerfile: ./auditoria.Dockerfile
    volumes:
      - .:/usr/app
    ports:
      - 6160:80
    networks:
      - pulsar
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: 400M
    depends_on:
      broker:
        condition: service_started
    environment:
      - PULSAR_ADDRESS=broker

  app-coreanalitica:
    build: 
      dockerfile: ./coreanalitica.Dockerfile
    volumes:
      - .:/usr/app
    ports:
      - 6161:80
    networks:
      - pulsar
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: 400M
    depends_on:
      broker:
        condition: service_started
    environment:
      - PULSAR_ADDRESS=broker

networks:
  pulsar:
    driver: bridge
    name: pulsar